# .github/workflows/build-and-push.yml

name: Test, Build, and Push Docker Images

on:
  push:
    branches:
      - main
      - develop

env:
  # --- IMPORTANT: Make sure this is still your ACR name ---
  ACR_NAME: mlopstriagesystemacr 

jobs:
  # --- NEW JOB TO RUN TESTS ---
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install all requirements for testing
          pip install -r requirements.txt
          # Download NLTK data needed for the preprocessing test
          python -c "import nltk; nltk.download(['punkt', 'punkt_tab', 'stopwords', 'wordnet', 'averaged_perceptron_tagger', 'averaged_perceptron_tagger_eng'])"

      - name: Run tests with pytest and generate coverage report
        run: pytest --cov=.

  # --- MODIFIED BUILD JOB ---
  build:
    # This job will only run if the 'test' job above succeeds
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push Ingestion API
        run: |
          docker build . -f services/ingestion_api/Dockerfile -t ${{ env.ACR_NAME }}.azurecr.io/ingestion-api:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/ingestion-api:latest

      - name: Build and push Results API
        run: |
          docker build . -f services/results_api/Dockerfile -t ${{ env.ACR_NAME }}.azurecr.io/results-api:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/results-api:latest

      - name: Build and push ML Worker
        run: |
          docker build . -f services/ml_worker/Dockerfile -t ${{ env.ACR_NAME }}.azurecr.io/ml-worker:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/ml-worker:latest